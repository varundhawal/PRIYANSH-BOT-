const fs = require('fs');
const ytdl = require('ytdl-core');
const { resolve } = require('path');
const moment = require("moment-timezone");
  var gio = moment.tz("Asia/Kolkata").format("HH:mm:ss");
async function downloadMusicFromYoutube(link, path) {
  var timestart = Date.now();
  if(!link) return 'Thi·∫øu link'
  var resolveFunc = function () { };
  var rejectFunc = function () { };
  var returnPromise = new Promise(function (resolve, reject) {
    resolveFunc = resolve;
    rejectFunc = reject;
  });
    ytdl(link, {
            filter: format =>
                format.quality == 'tiny' && format.audioBitrate == 128 && format.hasAudio == true
        }).pipe(fs.createWriteStream(path))
        .on("close", async () => {
            var data = await ytdl.getInfo(link)
            var result = {
                title: data.videoDetails.title,
                dur: Number(data.videoDetails.lengthSeconds),
                viewCount: data.videoDetails.viewCount,
                likes: data.videoDetails.likes,
                uploadDate: data.videoDetails.uploadDate,
                sub: data.videoDetails.author.subscriber_count,
                author: data.videoDetails.author.name,
                timestart: timestart
            }
            resolveFunc(result)
        })
  return returnPromise
}
module.exports.config = {
    name: "music",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "PREM BABU",
    description: "THIS BOT IS MADE BY PREM BABU",
    commandCategory: "ALL-MUSIC",
    usages: "[searchMusic]",
    cooldowns: 0
}

module.exports.handleReply = async function ({ api, event, handleReply }) {
    const moment = require("moment-timezone");
    const time = moment.tz("Asia/Kolkata").format("HH:mm:ss");
    const axios = require('axios')
    const { createReadStream, unlinkSync, statSync } = require("fs-extra")
    try {
        var path = `${__dirname}/cache/sing-${event.senderID}.mp3`
        var data = await downloadMusicFromYoutube('https://www.youtube.com/watch?v=' + handleReply.link[event.body -1], path);
        if (fs.statSync(path).size > 26214400) return api.sendMessage('‡§Æ‡•á‡§∞‡•Ä ‡§ú‡§æ‡§® ‡§ó‡§æ‡§®‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§§‡•ã ‡§≤‡§ø‡§ñ‡•ã ü§êüëà', event.threadID, () => fs.unlinkSync(path), event.messageID);
        api.unsendMessage(handleReply.messageID)
        return api.sendMessage({ 
            body: `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì\n     ‡§™‡•ç‡§∞‡•á‡§Æ-‡§¨‡§æ‡§¨‡•Ç              ‚úß‚ïê‚Ä¢‚ùÅùó†ùó®ùó¶ùóúùóñ‚ùÅ‚Ä¢‚ïê‚úß\n‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ\n\nüå∫   [ 1 ]   íÅç LAUNCH DATE   ‚Üí  [ ${data.uploadDate} ]\nüå∫   [ 2 ]   íÅç CHANNEL NAME  ‚Üí   ${data.author}\nüå∫   [ 3 ]   íÅç TOTAL VIEWS  ‚Üí  [ ${data.viewCount} ]\nüå∫   [ 4 ]   íÅç PROCCEING TIME  ‚Üí  [ ${Math.floor((Date.now()-data.timestart)/1000)} ]\nüå∫   [ 5 ]   íÅç TITLE NAME  ‚Üí  ${data.title} [ ${this.convertHMS(data.dur)} ]\n\n‚ùÅ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÉPREM-BABU‚ùÉ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùÅ`,
            attachment: fs.createReadStream(path)}, event.threadID, ()=> fs.unlinkSync(path), 
         event.messageID)

    }
    catch (e) { return console.log(e) }
}
module.exports.convertHMS = function(value) {
    const sec = parseInt(value, 10); 
    let hours   = Math.floor(sec / 3600);
    let minutes = Math.floor((sec - (hours * 3600)) / 60); 
    let seconds = sec - (hours * 3600) - (minutes * 60); 
    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    return (hours != '00' ? hours +':': '') + minutes+':'+seconds;
}
module.exports.run = async function ({ api, event, args }) {
  let axios = require('axios');
    if (args.length == 0 || !args) return api.sendMessage('‡§Æ‡•á‡§∞‡•Ä ‡§ú‡§æ‡§® ‡§ó‡§æ‡§®‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§§‡•ã ‡§≤‡§ø‡§ñ‡•ã ü§êüëà', event.threadID, event.messageID);
    const keywordSearch = args.join(" ");
    var path = `${__dirname}/cache/sing-${event.senderID}.mp3`
    if (fs.existsSync(path)) { 
        fs.unlinkSync(path)
    }
    if (args.join(" ").indexOf("https://") == 0) {
        try {
            var data = await downloadMusicFromYoutube(args.join(" "), path);
            if (fs.statSync(path).size > 2621440000) return api.sendMessage('ùóûùóµùóºÃÇùóªùó¥ ùòÅùóµùó≤ÃÇÃâ ùó¥ùòÇÃõÃâùó∂ ùó≥ùó∂ùóπùó≤ ùó∞ùóºÃÅ ùòÅùóµùóºÃõÃÄùó∂ ùó¥ùó∂ùóÆùóª ùòÅùòÇÃõÃÄ 01:10:10 ùó©ùòÇùó∂ ùóπùóºÃÄùóªùó¥ ùó∞ùóµùóºÃ£ùóª ùó≥ùó∂ùóπùó≤ ùó∏ùóµùóºÃÇùóªùó¥ ùó∞ùóºÃÅ ùóÆÃÇùó∫ ùòÅùóµùóÆùóªùóµ.', event.threadID, () => fs.unlinkSync(path), event.messageID);
            return api.sendMessage({ 
                body: `üé∂=====„Äå ùêåùêîùêíùêàùêÇ „Äç=====Ô∏èüé∂\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüìå ‚Üí ùóßùó∂ùòÅùóπùó≤: ${data.title} ( ${this.convertHMS(data.dur)} )\nüìÜ ‚Üí ùó°ùó¥ùóÆÃÄùòÜ ùòÅùóÆÃâùó∂ ùóπùó≤ÃÇùóª: ${data.uploadDate}\nüìª ‚Üí ùóñùóµùóÆùóªùóªùó≤ùóπ: ${data.author} ( ${data.sub} )\nüëÄ ‚Üí ùóüùòÇÃõùóºÃõÃ£ùòÅ ùòÖùó≤ùó∫: ${data.viewCount} ùòÉùó∂ùó≤ùòÑ\n‚ù§Ô∏è ‚Üí ùóüùòÇÃõùóºÃõÃ£ùòÅ ùòÅùóµùó∂ÃÅùó∞ùóµ: ${data.likes}\n‚è≥ ‚Üí ùóßùóµùóºÃõÃÄùó∂ ùó¥ùó∂ùóÆùóª ùòÖùòÇÃõÃâ ùóπùòÜÃÅ: ${Math.floor((Date.now()- data.timestart)/1000)} ùó¥ùó∂ùóÆÃÇùòÜ\nüîó ‚Üí  ùóüùó∂ùóªùó∏ ùòÅùóÆÃâùó∂: https://www.y2meta.com/vi/youtube/${handleReply.link[event.body - 1]}\n======= [ ${time} ] =======`,
                attachment: fs.createReadStream(path)}, event.threadID, ()=> fs.unlinkSync(path), 
            event.messageID)

        }
        catch (e) { return console.log(e) }
    } else {
          try {
            var link = [],
                msg = "",
                num = 0,
                numb = 0;
            var imgthumnail = []
            const Youtube = require('youtube-search-api');
            var data = (await Youtube.GetListByKeyword(keywordSearch, false,6)).items;
            for (let value of data) {
              link.push(value.id);
              let folderthumnail = __dirname + `/cache/${numb+=1}.png`;
                let linkthumnail = `https://img.youtube.com/vi/${value.id}/hqdefault.jpg`;
                let getthumnail = (await axios.get(`${linkthumnail}`, {
                    responseType: 'arraybuffer'
                })).data;
                  let datac = (await axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${value.id}&key=AIzaSyANZ2iLlzjDztWXgbCgL8Oeimn3i3qd0bE`)).data;
                     fs.writeFileSync(folderthumnail, Buffer.from(getthumnail, 'utf-8'));
              imgthumnail.push(fs.createReadStream(__dirname + `/cache/${numb}.png`));
              let channel = datac.items[0].snippet.channelTitle;
              num = num+=1
  if (num == 1) var num1 = "[ 1 ]  íÅç "
  if (num == 2) var num1 = "[ 2 ]  íÅç "
  if (num == 3) var num1 = "[ 3 ]  íÅç "
  if (num == 4) var num1 = "[ 4 ]  íÅç "
  if (num == 5) var num1 = "[ 5 ]  íÅç "
  if (num == 6) var num1 = "[ 6 ]  íÅç "

              msg += (`${num1} ${value.title} [ ${value.length.simpleText} ]\n‚ô•Ô∏è CHANNEL NAME íÅç  [ ${channel} ]\n‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ\n\n`);
            }
            var body = `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì\n     ‡§™‡•ç‡§∞‡•á‡§Æ-‡§¨‡§æ‡§¨‡•Ç                ‚úß‚ïê‚ïê‚Ä¢‚ùÅùó†ùó®ùó¶ùóúùóñ‚ùÅ‚Ä¢‚ïê‚ïê‚úß\n‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ\n\n\n‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ\nùó†ùó®ùóùùóõùóò ùó¨ùóò ${link.length} ùó†ùó®ùó¶ùóúùóñ ùó¨ùó¢ùó®ùóßùó®ùóïùóò ùó¶ùóò ùó†ùóúùóüùóò ùóõùóîùóú\n‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ‚îÅ‚óÜ\n\n${msg}ùóúùó¶ùó¶ ùó†ùóòùóú ùó¶ùóò ùóûùó¢ùóú ùóòùóû ùó†ùó®ùó¶ùóúùóñ ùó¶ùóòùóüùóòùóñùóß ùóûùó• ùóüùó¢\n\nùó¢ùó™ùó°ùóòùó•  íÅç ùó†ùó• ùó£ùó•ùóòùó† ùóïùóîùóïùó® ‚ô•Ô∏è‚ô•Ô∏è`
            return api.sendMessage({
              attachment: imgthumnail,
              body: body
            }, event.threadID, (error, info) => global.client.handleReply.push({
              type: 'reply',
              name: this.config.name,
              messageID: info.messageID,
              author: event.senderID,
              link
            }), event.messageID);
          } catch(e) {
            return api.sendMessage('ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i trong gi√¢y l√°t!!\n' + e, event.threadID, event.messageID);
        }
    }
      }
